function n(n,t,e,r){Object.defineProperty(n,t,{get:e,set:r,enumerable:!0,configurable:!0})}(0,globalThis.parcelRequire7856.register)("dF9Fr",function(t,e){n(t.exports,"roomIntegrity",()=>r),n(t.exports,"roomModule",()=>a);let r="90c841b6df16e47786ab27135138da3f79d0ac94fc2f94f81f529420739449da",a={main:"index.js",source:{"index.js":'import room from "varhub:room";\nroom.on("offline", room.kick);\nroom.on("leave", function (player) {\n    var playerLeavedGame = false;\n    if (player === state.playerO) {\n        playerLeavedGame = true;\n        state.playerO = null;\n    }\n    if (player === state.playerX) {\n        playerLeavedGame = true;\n        state.playerX = null;\n    }\n    if (playerLeavedGame) {\n        state.data = [];\n        state.win = null;\n        state.turn = null;\n        updateState();\n    }\n});\nvar state = {\n    win: null,\n    playerX: null,\n    playerO: null,\n    height: 0,\n    data: [],\n    turn: null,\n};\nupdateState();\nfunction updateState() {\n    room.message = JSON.stringify({\n        playerX: state.playerX, playerO: state.playerO, height: state.height, width: state.data.length\n    });\n    room.broadcast("state", state);\n}\nexport function getState() {\n    return state;\n}\nfunction getPlayerTeam(player) {\n    if (player === state.playerX)\n        return "x";\n    if (player === state.playerO)\n        return "o";\n    return null;\n}\nfunction checkPlayerTurn(player) {\n    if (player !== state.playerX && player !== state.playerO) {\n        throw new Error("you are not a player");\n    }\n    if (state.turn && state.turn !== player) {\n        throw new Error("not your turn");\n    }\n}\nfunction getOppositePlayer(player) {\n    if (player === state.playerX)\n        return state.playerO;\n    if (player === state.playerO)\n        return state.playerX;\n    return null;\n}\nexport function joinTeam(team) {\n    if (state.turn !== null)\n        throw new Error("wrong state");\n    if (!team) {\n        if (state.playerX === this.player) {\n            state.playerX = null;\n            updateState();\n            return true;\n        }\n        else if (state.playerO === this.player) {\n            state.playerO = null;\n            updateState();\n            return true;\n        }\n        return false;\n    }\n    if (team === "x" && state.playerX === null) {\n        state.playerX = this.player;\n        if (state.playerO === this.player)\n            state.playerO = null;\n        updateState();\n        return true;\n    }\n    if (team === "o" && state.playerO === null) {\n        state.playerO = this.player;\n        if (state.playerX === this.player)\n            state.playerX = null;\n        updateState();\n        return true;\n    }\n    return false;\n}\nexport function start(rows, height) {\n    if (rows === void 0) { rows = state.data.length; }\n    if (height === void 0) { height = state.height; }\n    checkPlayerTurn(this.player);\n    if (state.turn !== null)\n        throw new Error("wrong state");\n    if (state.playerO == null || state.playerX == null)\n        throw new Error("no players");\n    if (!Number.isInteger(rows))\n        throw new Error("rows format");\n    if (!Number.isInteger(height))\n        throw new Error("height format");\n    rows = Number(rows);\n    if (rows < 4 || rows > 20)\n        throw new Error("rows format");\n    if (height < 4 || height > 20)\n        throw new Error("height format");\n    state.height = height;\n    state.turn = null;\n    state.win = null;\n    state.data = Array.from({ length: rows }).map(function () { return []; });\n    updateState();\n}\nexport function move(colNumber) {\n    checkPlayerTurn(this.player);\n    var oppositePlayer = getOppositePlayer(this.player);\n    if (!oppositePlayer)\n        throw new Error("game not ready");\n    colNumber = Number(colNumber);\n    if (!Number.isInteger(colNumber))\n        throw new Error("wrong colNumber");\n    if (colNumber < 0 || colNumber >= state.data.length)\n        throw new Error("colNumber out of bounds");\n    var col = state.data[colNumber];\n    if (col.length >= state.height)\n        throw new Error("height out");\n    var playerTeam = getPlayerTeam(this.player);\n    col.push(playerTeam);\n    var hasTurns = state.data.some(function (_a) {\n        var length = _a.length;\n        return length < state.height;\n    });\n    state.turn = hasTurns ? getOppositePlayer(this.player) : null;\n    checkWin(colNumber, col.length - 1, playerTeam);\n    updateState();\n    return true;\n}\nvar directions = [[0, 1], [1, 1], [1, 0], [1, -1]];\nfunction checkWin(colNumber, rowNumber, team) {\n    var winPoints = checkWinPoints(state.data, colNumber, rowNumber, team, 4);\n    if (!winPoints)\n        return;\n    var winType = { x: "X", o: "O" }[team];\n    for (var _i = 0, winPoints_1 = winPoints; _i < winPoints_1.length; _i++) {\n        var _a = winPoints_1[_i], row = _a[0], col = _a[1];\n        state.data[row][col] = winType;\n    }\n    state.win = team === "x" ? state.playerX : state.playerO;\n    state.turn = null;\n}\nfunction checkWinPoints(map, colNumber, rowNumber, team, winLength) {\n    var _a, _b;\n    var totalWinPoints = [];\n    for (var _i = 0, directions_1 = directions; _i < directions_1.length; _i++) {\n        var dir = directions_1[_i];\n        var winPoints = [];\n        var point = [colNumber, rowNumber];\n        while (true) {\n            var value = (_a = map[point[0]]) === null || _a === void 0 ? void 0 : _a[point[1]];\n            if (value !== team)\n                break;\n            winPoints.push(point);\n            point = [point[0] + dir[0], point[1] + dir[1]];\n        }\n        point = [colNumber - dir[0], rowNumber - dir[1]];\n        while (true) {\n            var value = (_b = map[point[0]]) === null || _b === void 0 ? void 0 : _b[point[1]];\n            if (value !== team)\n                break;\n            winPoints.push(point);\n            point = [point[0] - dir[0], point[1] - dir[1]];\n        }\n        if (winPoints.length >= winLength)\n            totalWinPoints.push.apply(totalWinPoints, winPoints);\n    }\n    if (totalWinPoints.length === 0)\n        return null;\n    return totalWinPoints;\n}\n'}}});
//# sourceMappingURL=.varhub-modules.aW5kZXgudHM=.624ff761.js.map
